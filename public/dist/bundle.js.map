{"version":3,"file":"bundle.js","sources":["../auth.js","../state.js","../save_manager.js","../text_handler.js","../core/text_core.js","../core/reader_core.js","../reader.js","../ui.js","../document_manager.js","../utils.js","../main.js"],"sourcesContent":["const API_URL = '/api'; // Using a relative URL, which Caddy will proxy to the backend\n\n// Store the token in localStorage for simplicity.\n// A more secure approach for production might use httpOnly cookies.\nconst TOKEN_KEY = 'readmind_token';\n\n/**\n * Signs up a new user.\n * @param {string} email\n * @param {string} password\n * @param {string} captchaToken\n * @returns {Promise<any>} The response from the server.\n */\nexport async function signup(email, password, captchaToken) {\n    const response = await fetch(`${API_URL}/signup`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email, password, captchaToken }),\n    });\n    return response.json();\n}\n\n/**\n * Logs in a user.\n * @param {string} email\n * @param {string} password\n * @param {string} captchaToken\n * @returns {Promise<any>} The response from the server.\n */\nexport async function login(email, password, captchaToken) {\n    const response = await fetch(`${API_URL}/login`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email, password, captchaToken }),\n    });\n    const data = await response.json();\n    if (response.ok && data.token) {\n        localStorage.setItem(TOKEN_KEY, data.token);\n    }\n    return data;\n}\n\n/**\n * Logs out the current user by removing the token.\n */\nexport function logout() {\n    localStorage.removeItem(TOKEN_KEY);\n}\n\n/**\n * Gets the auth token from localStorage.\n * @returns {string|null}\n */\nexport function getToken() {\n    return localStorage.getItem(TOKEN_KEY);\n}\n\n/**\n * Checks if a user is currently logged in.\n * @returns {boolean}\n */\nexport function isLoggedIn() {\n    const token = getToken();\n    if (!token) return false;\n\n    try {\n        // Decode the token to check for expiry\n        const payload = JSON.parse(atob(token.split('.')[1]));\n        const now = Math.floor(Date.now() / 1000);\n        return payload.exp > now;\n    } catch (e) {\n        return false;\n    }\n}\n\n/**\n * Gets the current user's info from the token.\n * @returns {{id: number, email: string}|null}\n */\nexport function getCurrentUser() {\n    const token = getToken();\n    if (!token || !isLoggedIn()) {\n        return null;\n    }\n    try {\n        const payload = JSON.parse(atob(token.split('.')[1]));\n        return payload.user;\n    } catch (e) {\n        return null;\n    }\n}\n\n/**\n * Fetches the user's settings from the server.\n * @returns {Promise<any>}\n */\nexport async function getSettings() {\n    const token = getToken();\n    if (!token) return Promise.resolve({}); // Return empty settings if not logged in\n\n    const response = await fetch(`${API_URL}/settings`, {\n        headers: { Authorization: `Bearer ${token}` },\n    });\n    if (!response.ok) {\n        // If token is invalid, log out the user\n        if (response.status === 401) logout();\n        throw new Error('Could not fetch settings');\n    }\n    return response.json();\n}\n\nexport async function getDocument(id) {\n    const token = getToken();\n    if (!token) return Promise.reject('Not logged in');\n\n    const response = await fetch(`${API_URL}/documents/${id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n    });\n    if (!response.ok) {\n        if (response.status === 401) logout();\n        throw new Error('Could not fetch document');\n    }\n    return response.json();\n}\n\nexport async function createDocument(title, content = '') {\n    const token = getToken();\n    if (!token) return Promise.reject('Not logged in');\n\n    const response = await fetch(`${API_URL}/documents`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${token}` },\n        body: JSON.stringify({ title, content }),\n    });\n    if (!response.ok) {\n        const err = await response.json();\n        throw new Error(err.message || 'Could not create document');\n    }\n    return response.json();\n}\n\nexport async function updateDocument(id, title, content) {\n    const token = getToken();\n    if (!token) return Promise.reject('Not logged in');\n\n    const response = await fetch(`${API_URL}/documents/${id}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${token}` },\n        body: JSON.stringify({ title, content }),\n    });\n    if (!response.ok) {\n        throw new Error('Could not update document');\n    }\n    return response.json();\n}\n\nexport async function deleteDocument(id) {\n    const token = getToken();\n    if (!token) return Promise.reject('Not logged in');\n\n    const response = await fetch(`${API_URL}/documents/${id}`, {\n        method: 'DELETE',\n        headers: { Authorization: `Bearer ${token}` },\n    });\n    if (!response.ok) {\n        throw new Error('Could not delete document');\n    }\n    return response.json();\n}\n\n/**\n * Fetches the list of documents for the logged-in user.\n * @returns {Promise<any>}\n */\nexport async function getDocuments() {\n    const token = getToken();\n    if (!token) return Promise.resolve([]);\n\n    const response = await fetch(`${API_URL}/documents`, {\n        headers: { Authorization: `Bearer ${token}` },\n    });\n    if (!response.ok) {\n        if (response.status === 401) logout();\n        throw new Error('Could not fetch documents');\n    }\n    return response.json();\n}\n\n/**\n * Saves the user's settings to the server.\n * @param {object} settings\n * @returns {Promise<any>}\n */\nexport async function saveSettings(settings) {\n    const token = getToken();\n    if (!token) return Promise.resolve(); // Do nothing if not logged in\n\n    const response = await fetch(`${API_URL}/settings`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({ settings }),\n    });\n\n    if (!response.ok) {\n        if (response.status === 401) {\n            // Token expired, try to refresh\n            try {\n                await refreshToken();\n                // Retry with new token\n                const newToken = getToken();\n                const retryResponse = await fetch(`${API_URL}/settings`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${newToken}`,\n                    },\n                    body: JSON.stringify({ settings }),\n                });\n                if (!retryResponse.ok) throw new Error('Could not save settings after token refresh');\n                return await retryResponse.json();\n            } catch (refreshError) {\n                // Refresh failed, redirect to login\n                logout();\n                throw new Error('Session expired. Please login again.');\n            }\n        }\n        throw new Error('Could not save settings');\n    }\n    return response.json();\n}\n\nexport async function refreshToken() {\n    const token = getToken();\n    if (!token) throw new Error('No token available');\n\n    const response = await fetch(`${API_URL}/auth/refresh`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ token })\n    });\n\n    if (!response.ok) {\n        throw new Error('Failed to refresh token');\n    }\n\n    const data = await response.json();\n    localStorage.setItem(TOKEN_KEY, data.token);\n    return data.token;\n}\n","// state.js - Shared application state, modularized by feature.\n\n// --- Constants ---\nexport const LS_KEYS = {\n    SETTINGS: \"readMindSettings_v2\", // Combined settings key\n    INDEX: \"readMindIndex\",\n    LAST_DOC_ID: \"readMindLastDocId\",\n    HAS_VISITED: \"readMindHasVisited\",\n};\n\nexport const CONTACT_EMAIL = \"hun1234kim@gmail.com\";\nexport const APP_VERSION = \"2.0.0\";\n\n// --- Application State ---\n// For general app settings like theme, language, etc.\nexport const appState = {\n    currentLanguage: \"ko\",\n    currentTheme: \"blue\",\n    userHasManuallySetTheme: false,\n    originalPlaceholderText: \"\",\n    encoder: new TextEncoder(),\n    fontFamily: \"'Roboto', sans-serif\",\n    fontSize: 48,\n};\n\n// --- Reader State ---\n// For state directly related to the speed reading engine.\nexport const readerState = {\n    words: [],\n    currentIndex: 0,\n    intervalId: null,\n    currentWpm: 250,\n    isPaused: false,\n    startDelayTimeoutId: null,\n    isFixationPointEnabled: false,\n    chunkSize: 1,\n    readingMode: 'flash', // 'flash' or 'teleprompter'\n    NO_SPACE_LANGUAGES: [\"ja\", \"zh\", \"ko\"],\n    engine: null, // SpeedReaderCore 인스턴스 참조\n};\n\n// --- Document & Editor State ---\n// For state related to document management and the editor.\nexport const documentState = {\n    simplemde: null, // To hold the SimpleMDE instance\n    activeDocument: null, // To hold the currently active document object\n};\n","// save_manager.js - 중앙화된 저장 관리\n\nimport { appState, readerState, LS_KEYS } from \"./state.js\";\nimport * as auth from './auth.js';\n\nlet saveTimeout = null;\n\nexport function scheduleSave() {\n    clearTimeout(saveTimeout);\n    saveTimeout = setTimeout(async () => {\n        const settings = getCurrentSettings();\n        \n        // 항상 로컬에 저장\n        try {\n            localStorage.setItem(LS_KEYS.SETTINGS, JSON.stringify(settings));\n        } catch (error) {\n            console.warn('Failed to save settings locally:', error);\n        }\n        \n        // 로그인된 경우 서버에도 저장\n        if (auth.isLoggedIn()) {\n            try {\n                await auth.saveSettings(settings);\n                console.log('Settings saved to server:', settings);\n            } catch (error) {\n                console.error('Failed to save settings to server:', error);\n            }\n        }\n    }, 1500);\n}\n\nexport function getCurrentSettings() {\n    return {\n        theme: appState.currentTheme,\n        language: appState.currentLanguage,\n        wpm: readerState.currentWpm,\n        chunkSize: readerState.chunkSize,\n        isFixationPointEnabled: readerState.isFixationPointEnabled,\n        readingMode: readerState.readingMode,\n        fontFamily: appState.fontFamily,\n    };\n}\n\n","// text_handler.js - Handles text statistics and input changes\n\nimport { dom, getTranslation, updateButtonStates } from \"./ui.js\";\nimport { appState, readerState, documentState, LS_KEYS } from \"./state.js\";\nimport { scheduleSave } from \"./save_manager.js\";\nimport { formatWordWithFixation, updateProgressBar } from \"./reader.js\";\nimport { cleanText, segmentKoreanMeaningful, segmentByIntl, segmentJapaneseWithKuromoji, chunkIfNeeded } from \"./core/text_core.js\";\n\nlet kuromojiTokenizer = null;\n\nasync function getTokenizer() {\n    if (kuromojiTokenizer) return kuromojiTokenizer;\n    console.log(\"Loading Japanese dictionary...\");\n    return new Promise((resolve, reject) => {\n        kuromoji.builder({ dicPath: \"https://cdn.jsdelivr.net/npm/kuromoji/dict/\" }).build((err, tokenizer) => {\n            if (err) {\n                console.error(\"Kuromoji Build Error:\", err);\n                reject(err);\n            } else {\n                kuromojiTokenizer = tokenizer;\n                console.log(\"Japanese dictionary loaded.\");\n                resolve(tokenizer);\n            }\n        });\n    });\n}\n\nfunction segmentTextWithBrowserAPI(text) {\n    try {\n        const segmenter = new Intl.Segmenter(appState.currentLanguage, { granularity: 'word' });\n        return Array.from(segmenter.segment(text)).map(s => s.segment);\n    } catch (error) {\n        console.warn('Intl.Segmenter not supported, falling back to character splitting');\n        return text.split('');\n    }\n}\n\nfunction segmentKoreanText(text) {\n    // 한국어는 기본적으로 어절 단위로 처리 (자연스러운 읽기)\n    const words = [];\n    const segments = text.split(/\\s+/);\n    \n    for (const segment of segments) {\n        if (segment.trim()) {\n            // 한글이 포함된 경우\n            if (/[\\uAC00-\\uD7AF\\u1100-\\u11FF\\u3130-\\u318F]/.test(segment)) {\n                // 어절이 너무 길면(6글자 이상) 적절히 분리, 아니면 그대로 유지\n                if (segment.length > 6) {\n                    const koreanWords = [];\n                    let currentWord = '';\n                    \n                    for (let i = 0; i < segment.length; i++) {\n                        const char = segment[i];\n                        currentWord += char;\n                        \n                        // 3-4글자 단위로 자연스럽게 분리\n                        if (currentWord.length >= 3 || i === segment.length - 1) {\n                            if (currentWord.trim()) {\n                                koreanWords.push(currentWord);\n                            }\n                            currentWord = '';\n                        }\n                    }\n                    \n                    words.push(...koreanWords);\n                } else {\n                    // 어절이 적당한 길이면 그대로 유지 (자연스러운 읽기)\n                    words.push(segment);\n                }\n            } else {\n                // 영문이나 숫자는 그대로 유지\n                words.push(segment);\n            }\n        }\n    }\n    \n    return words.filter(word => word.length > 0);\n}\n\nexport async function updateTextStats() {\n    const currentText = documentState.simplemde ? documentState.simplemde.value() : (dom.textInput?.value || '');\n    const cleanedText = cleanText(currentText);\n\n    // 텍스트가 비어있으면 초기화\n    if (!cleanedText.trim()) {\n        readerState.words = [];\n        readerState.currentIndex = 0;\n        if (dom.wordCountDisplay) dom.wordCountDisplay.textContent = '0';\n        if (dom.charCountDisplay) dom.charCountDisplay.textContent = '0';\n        if (dom.readingTimeDisplay) dom.readingTimeDisplay.textContent = '0';\n        if (dom.progressInfoDisplay) dom.progressInfoDisplay.textContent = '';\n        updateProgressBar();\n        return;\n    }\n\n    let words;\n    if (appState.currentLanguage === 'ja') {\n        words = await segmentJapaneseWithKuromoji(cleanedText, getTokenizer);\n    } else if (appState.currentLanguage === 'ko') {\n        words = segmentKoreanText(cleanedText);\n    } else if (readerState.NO_SPACE_LANGUAGES.includes(appState.currentLanguage)) {\n        words = segmentTextWithBrowserAPI(cleanedText);\n    } else {\n        words = cleanedText.trim().split(/\\s+/).filter(Boolean);\n    }\n\n    const wordCount = words.length;\n\n    readerState.words = chunkIfNeeded(\n        words,\n        readerState.chunkSize,\n        readerState.NO_SPACE_LANGUAGES.includes(appState.currentLanguage)\n    );\n\n    // 통계 업데이트\n    if (dom.wordCountDisplay) dom.wordCountDisplay.textContent = wordCount;\n    if (dom.charCountDisplay) dom.charCountDisplay.textContent = cleanedText.length;\n    if (dom.readingTimeDisplay) {\n        const readingTime = Math.ceil(wordCount / (readerState.currentWpm / 60));\n        dom.readingTimeDisplay.textContent = readingTime;\n    }\n    \n    updateProgressBar();\n    updateDetailedStats(cleanedText);\n}\n\nfunction updateDetailedStats(text) {\n    // 외부 라이브러리 없이 경량 통계 산출\n    const stats = {\n        readabilityScore: \"-\",\n        avgSentenceLength: \"-\",\n        syllableCount: \"-\",\n        lexicalDiversity: \"-\",\n    };\n\n    if (text && text.trim() !== \"\") {\n        try {\n            const sentences = text.split(/[.!?\\n]+/).filter(Boolean);\n            const words = (text.match(/\\b\\w+\\b/g) || []).map(w => w.toLowerCase());\n            const vowels = (text.match(/[aeiouAEIOU가-힣]/g) || []).length; // 간이 음절수\n            const uniqueWords = new Set(words).size;\n            const wordCount = words.length;\n            const sentenceCount = sentences.length || 1;\n            stats.avgSentenceLength = (wordCount / sentenceCount).toFixed(1);\n            stats.syllableCount = vowels;\n            stats.lexicalDiversity = wordCount > 0 ? `${((uniqueWords / wordCount) * 100).toFixed(1)}%` : \"0%\";\n            stats.readabilityScore = (0.39 * (wordCount / sentenceCount) + 11.8 * (vowels / Math.max(wordCount,1)) - 15.59).toFixed(1);\n        } catch (error) {\n            console.error(\"Error calculating lightweight stats:\", error);\n        }\n    }\n\n    if (dom.readabilityScore) dom.readabilityScore.textContent = String(stats.readabilityScore);\n    if (dom.avgSentenceLength) dom.avgSentenceLength.textContent = String(stats.avgSentenceLength);\n    if (dom.syllableCount) dom.syllableCount.textContent = String(stats.syllableCount);\n    if (dom.lexicalDiversity) dom.lexicalDiversity.textContent = String(stats.lexicalDiversity);\n}\n\nexport async function handleTextChange(newTextSourceOrEvent) {\n    const newText = (typeof newTextSourceOrEvent === \"string\") ? newTextSourceOrEvent : (documentState.simplemde ? documentState.simplemde.value() : '');\n\n    if (documentState.simplemde) {\n        documentState.simplemde.value(newText);\n    }\n\n    if (readerState.intervalId) {\n        clearInterval(readerState.intervalId);\n        readerState.intervalId = null;\n    }\n    readerState.isPaused = false;\n    readerState.currentIndex = 0;\n\n    await updateTextStats();\n    updateButtonStates(\"initial\");\n\n    if (dom.currentWordDisplay) {\n        dom.currentWordDisplay.innerHTML = formatWordWithFixation(getTranslation(\"statusReady\"));\n    }\n\n    scheduleSave();\n    localStorage.setItem(LS_KEYS.INDEX, \"0\");\n}\n","// text_core.js - framework-agnostic text normalization and segmentation\n\nexport function cleanText(raw) {\n    if (!raw) return '';\n    \n    let text = String(raw);\n    \n    // 마크다운 헤더 제거 (# ## ### 등)\n    text = text.replace(/^#{1,6}\\s+/gm, '');\n    \n    // 마크다운 링크 제거 [텍스트](URL) → 텍스트만 유지\n    text = text.replace(/\\[([^\\]]+)\\]\\([^)]+\\)/g, '$1');\n    \n    // 이미지 링크 완전 제거 ![alt](src)\n    text = text.replace(/!\\[[^\\]]*\\]\\([^)]+\\)/g, '');\n    \n    // 인라인 코드 제거 `code`\n    text = text.replace(/`([^`]+)`/g, '$1');\n    \n    // 코드 블록 제거 ```code```\n    text = text.replace(/```[\\s\\S]*?```/g, '');\n    \n    // 볼드/이탤릭 마크다운 제거 **text** *text* __text__ _text_\n    text = text.replace(/(\\*\\*|__)(.*?)\\1/g, '$2');\n    text = text.replace(/(\\*|_)(.*?)\\1/g, '$2');\n    \n    // 취소선 제거 ~~text~~\n    text = text.replace(/~~(.*?)~~/g, '$1');\n    \n    // 인용문 제거 > text\n    text = text.replace(/^\\s*>\\s*/gm, '');\n    \n    // 리스트 마커 제거 - * + 1. 2. 등\n    text = text.replace(/^\\s*[-*+]\\s+/gm, '');\n    text = text.replace(/^\\s*\\d+\\.\\s+/gm, '');\n    \n    // 수평선 제거 --- *** ___\n    text = text.replace(/^[\\s]*[-*_]{3,}[\\s]*$/gm, '');\n    \n    // 테이블 구분자 제거 | --- |\n    text = text.replace(/^\\|.*\\|$/gm, '');\n    text = text.replace(/^\\|?\\s*:?-+:?\\s*\\|.*$/gm, '');\n    \n    // HTML 태그 제거\n    text = text.replace(/<[^>]*>/g, '');\n    \n    // 남은 특수문자들 제거\n    text = text.replace(/[\\[\\]\"\"\"'()（）<>【】『』「」`~@^|=+\\\\]/g, '');\n    \n    // 여러 공백을 하나로 통합하고 줄바꿈 정리\n    text = text.replace(/\\s+/g, ' ');\n    text = text.replace(/\\n\\s*\\n/g, '\\n');\n    \n    return text.trim();\n}\n\nexport function isKorean(text) {\n    return /[\\uAC00-\\uD7AF\\u1100-\\u11FF\\u3130-\\u318F]/.test(text);\n}\n\nexport function segmentKoreanMeaningful(text) {\n    const words = [];\n    const segments = text.split(/\\s+/);\n    for (const segment of segments) {\n        if (!segment.trim()) continue;\n        if (isKorean(segment)) {\n            let buf = '';\n            for (let i = 0; i < segment.length; i++) {\n                buf += segment[i];\n                if (buf.length >= 2 && (i === segment.length - 1 || /[.,!?;:]/.test(segment[i + 1]) || buf.length >= 3)) {\n                    words.push(buf);\n                    buf = '';\n                }\n            }\n            if (buf) words.push(buf);\n        } else {\n            words.push(segment);\n        }\n    }\n    return words.filter(Boolean);\n}\n\nexport function segmentByIntl(text, lang) {\n    try {\n        const seg = new Intl.Segmenter(lang, { granularity: 'word' });\n        return Array.from(seg.segment(text)).map(s => s.segment);\n    } catch {\n        return text.split('');\n    }\n}\n\nexport async function segmentJapaneseWithKuromoji(text, getTokenizer) {\n    try {\n        const tokenizer = await getTokenizer();\n        return tokenizer.tokenize(text).map(t => t.surface_form);\n    } catch {\n        return text.split('');\n    }\n}\n\nexport function chunkIfNeeded(words, chunkSize, noSpaceLanguage) {\n    if (!Array.isArray(words)) return [];\n    if (chunkSize > 1 && !noSpaceLanguage) {\n        const chunks = [];\n        for (let i = 0; i < words.length; i += chunkSize) {\n            chunks.push(words.slice(i, i + chunkSize).join(' '));\n        }\n        return chunks;\n    }\n    return words;\n}\n\n\n","// reader_core.js - framework-agnostic speed reading core\n// This module contains the minimal engine logic (no DOM knowledge)\n\nexport class SpeedReaderCore {\n    constructor(options) {\n        this.getWords = options.getWords; // () => string[] | string[][]\n        this.onChunk = options.onChunk;   // (chunkText: string) => void\n        this.onProgress = options.onProgress; // (index, total) => void\n        this.onStatus = options.onStatus; // (statusKey: string) => void\n        this.onComplete = options.onComplete; // () => void\n        this.getWpm = options.getWpm;     // () => number\n        this.getMode = options.getMode;   // () => 'flash' | 'teleprompter'\n\n        this.index = 0;\n        this.timer = null;\n        this.startDelayId = null;\n        this.isPaused = false;\n    }\n\n    get intervalMs() {\n        const wpm = Math.max(50, Math.min(500, Number(this.getWpm?.() || 250)));\n        return 60000 / wpm;\n    }\n\n    // 단어 길이와 복잡도에 따른 적응형 속도 계산\n    getAdaptiveInterval(word) {\n        const baseInterval = this.intervalMs;\n        \n        if (!word) return baseInterval;\n        \n        const wordText = Array.isArray(word) ? word.join(' ') : String(word);\n        const length = wordText.length;\n        \n        // 한국어 친화적 길이별 시간 조정\n        let multiplier = 1;\n        if (length <= 2) {\n            multiplier = 0.9; // 짧은 단어는 약간 빠르게 (한국어 특성 고려)\n        } else if (length >= 5) {\n            multiplier = 1.2; // 긴 단어는 적당히 느리게\n        } else if (length >= 4) {\n            multiplier = 1.05; // 중간 단어는 미세 조정\n        }\n        \n        // 특수 문자나 숫자가 포함된 경우 시간 추가\n        if (/[0-9]/.test(wordText)) {\n            multiplier *= 1.2; // 숫자는 처리 시간 추가\n        }\n        if (/[^\\w\\s가-힣]/.test(wordText)) {\n            multiplier *= 1.1; // 특수문자 처리 시간 추가\n        }\n        \n        return Math.round(baseInterval * multiplier);\n    }\n\n    resetToStart() {\n        this.index = 0;\n    }\n\n    start(isResuming = false, delayMs = 1000) {\n        const words = this.getWords?.() || [];\n        const total = Array.isArray(words) ? words.length : 0;\n        if (total === 0) {\n            this.onStatus?.('msgNoWords');\n            return;\n        }\n        if (!isResuming) this.resetToStart();\n\n        this.isPaused = false;\n        this.onStatus?.('statusPreparing');\n\n        clearTimeout(this.startDelayId);\n        this.startDelayId = setTimeout(() => {\n            clearInterval(this.timer);\n            this.tick();\n            this.scheduleNextTick();\n        }, isResuming ? 0 : delayMs);\n    }\n\n    tick() {\n        const words = this.getWords?.() || [];\n        const total = words.length;\n        if (this.index >= total) {\n            this.complete();\n            return;\n        }\n        const chunk = words[this.index];\n        const chunkText = Array.isArray(chunk) ? chunk.join(' ') : String(chunk);\n        this.onChunk?.(chunkText);\n        this.index += 1;\n        this.onProgress?.(this.index, total);\n        \n        // 다음 단어 예약\n        this.scheduleNextTick();\n    }\n\n    scheduleNextTick() {\n        const words = this.getWords?.() || [];\n        if (this.index < words.length && !this.isPaused) {\n            const currentWord = words[this.index];\n            const nextInterval = this.getAdaptiveInterval(currentWord);\n            this.timer = setTimeout(() => this.tick(), nextInterval);\n        }\n    }\n\n    pause() {\n        clearTimeout(this.timer);\n        this.timer = null;\n        this.isPaused = true;\n        this.onStatus?.('statusPaused');\n    }\n\n    complete() {\n        clearTimeout(this.timer);\n        this.timer = null;\n        this.onStatus?.('statusComplete');\n        this.onComplete?.();\n    }\n\n    updateSpeed() {\n        // 실행 중인 경우에만 타이머 재설정\n        if (this.timer && !this.isPaused) {\n            clearTimeout(this.timer);\n            this.scheduleNextTick();\n        }\n    }\n}\n\n\n","// reader.js - Core speed-reading engine logic.\n\nimport { dom, getTranslation, showMessage, updateButtonStates } from \"./ui.js\";\nimport { updateTextStats } from \"./text_handler.js\";\nimport { SpeedReaderCore } from \"./core/reader_core.js\";\nimport { readerState, appState, LS_KEYS } from \"./state.js\";\nimport { scheduleSave } from \"./save_manager.js\";\n\nconst START_DELAY = 1000;\n\nexport function updateProgressBar() {\n    if (!dom.progressBarFill) return;\n    const progress = readerState.words.length > 0 ? (readerState.currentIndex / readerState.words.length) * 100 : 0;\n    dom.progressBarFill.style.width = `${progress}%`;\n    \n    // 접근성을 위한 진행률 바 업데이트\n    const progressBar = dom.progressBarFill.parentElement;\n    if (progressBar) {\n        progressBar.setAttribute('aria-valuenow', Math.round(progress).toString());\n    }\n}\n\nexport function formatWordWithFixation(word) {\n    console.log('formatWordWithFixation called:', { word, isEnabled: readerState.isFixationPointEnabled });\n    if (!readerState.isFixationPointEnabled || !word || word.length <= 1) return word;\n    const point = Math.max(0, Math.floor(word.length / 3) - (word.length > 5 ? 1 : 0));\n    if (point < 0 || point >= word.length) return word;\n    return `${word.substring(0, point)}<span class=\"fixation-point\">${word.charAt(point)}</span>${word.substring(point + 1)}`;\n}\n\nfunction displayTeleprompterMode(newWord) {\n    if (!dom.currentWordDisplay) return;\n    \n    const displayArea = dom.currentWordDisplay;\n    const currentContent = displayArea.innerHTML;\n    \n    // 새 단어를 추가하고 스크롤\n    displayArea.innerHTML = currentContent + ' ' + newWord;\n    \n    // 스크롤을 아래로 이동하여 새 단어가 보이도록 함\n    displayArea.scrollTop = displayArea.scrollHeight;\n}\n\nfunction displayNextWord() {\n    if (readerState.currentIndex < readerState.words.length) {\n        if (dom.currentWordDisplay) {\n            let currentChunk = readerState.words[readerState.currentIndex];\n            const wordToShow = Array.isArray(currentChunk) ? currentChunk.join(' ') : currentChunk;\n            \n            if (readerState.readingMode === 'teleprompter') {\n                // 텔레프롬프터 모드: 여러 단어를 한 번에 표시하고 스크롤\n                displayTeleprompterMode(wordToShow);\n            } else {\n                // 플래시 모드: 단어를 하나씩 중앙에 표시\n                dom.currentWordDisplay.innerHTML = formatWordWithFixation(wordToShow);\n            }\n        }\n        readerState.currentIndex++;\n        if (dom.progressInfoDisplay) {\n             let unitLabel;\n            if (readerState.NO_SPACE_LANGUAGES.includes(appState.currentLanguage)) {\n                unitLabel = getTranslation(\"charsLabel\");\n            } else if (readerState.chunkSize > 1) {\n                unitLabel = getTranslation(\"chunksLabel\");\n            } else {\n                unitLabel = getTranslation(\"wordsLabel\");\n            }\n            dom.progressInfoDisplay.textContent = getTranslation(\"progressLabelFormat\", appState.currentLanguage, { unit: unitLabel, current: readerState.currentIndex, total: readerState.words.length });\n        }\n        updateProgressBar();\n    } else {\n        completeReadingSession();\n    }\n}\n\nexport async function startReadingFlow(isResuming = false) {\n    // 항상 최신 텍스트 세분화가 반영되도록 보장\n    await updateTextStats();\n    if (!readerState.words || readerState.words.length === 0) {\n        showMessage(\"msgNoWords\", \"error\");\n        return;\n    }\n    \n    // 재시작이 아닌 경우에만 인덱스 초기화\n    if (!isResuming) {\n        readerState.currentIndex = 0;\n        // 텔레프롬프터 모드 초기화\n        if (readerState.readingMode === 'teleprompter' && dom.currentWordDisplay) {\n            dom.currentWordDisplay.innerHTML = '';\n            dom.currentWordDisplay.style.textAlign = 'left';\n            dom.currentWordDisplay.style.overflowY = 'auto';\n            dom.currentWordDisplay.style.maxHeight = '400px';\n        } else if (dom.currentWordDisplay) {\n            dom.currentWordDisplay.style.textAlign = 'center';\n            dom.currentWordDisplay.style.overflowY = 'visible';\n            dom.currentWordDisplay.style.maxHeight = 'none';\n        }\n    }\n\n    if (dom.currentWordDisplay) {\n        if (readerState.readingMode === 'teleprompter') {\n            dom.currentWordDisplay.innerHTML = formatWordWithFixation(getTranslation(\"statusPreparing\"));\n        } else {\n            dom.currentWordDisplay.innerHTML = formatWordWithFixation(getTranslation(\"statusPreparing\"));\n        }\n    }\n\n    // 엔진 초기화 및 실행 (항상 새로 생성하여 최신 설정 반영)\n    readerState.engine = new SpeedReaderCore({\n            getWords: () => readerState.words,\n            getWpm: () => readerState.currentWpm,\n            getMode: () => readerState.readingMode,\n            onChunk: (text) => {\n                if (!dom.currentWordDisplay) return;\n                if (readerState.readingMode === 'teleprompter') {\n                    const area = dom.currentWordDisplay;\n                    area.innerHTML = area.innerHTML + ' ' + text;\n                    area.scrollTop = area.scrollHeight;\n                } else {\n                    // 원본 ReadMindApp 애니메이션 로직\n                    const wordArea = dom.currentWordDisplay;\n                    const currentWpm = readerState.currentWpm;\n                    \n                    // 애니메이션 상수 (원본에서 가져온 값들)\n                    const ANIMATION_DURATION_NORMAL = 120;\n                    const ANIMATION_DURATION_SUBTLE = 60;\n                    const LOW_WPM_THRESHOLD = 200;\n                    const NO_ANIMATION_THRESHOLD = 400;\n                    \n                    wordArea.innerHTML = formatWordWithFixation(text);\n                    wordArea.style.transition = \"none\";\n                    wordArea.style.opacity = \"1\";\n                    wordArea.style.transform = \"translateY(0px)\";\n\n                    if (currentWpm < LOW_WPM_THRESHOLD) {\n                        // 느린 속도: 부드러운 페이드인 + 위치 이동 애니메이션\n                        wordArea.style.opacity = \"0\";\n                        wordArea.style.transform = \"translateY(5px)\";\n                        wordArea.offsetHeight; // Reflow\n                        wordArea.style.transition = `opacity ${ANIMATION_DURATION_NORMAL / 1000}s ease-out, transform ${ANIMATION_DURATION_NORMAL / 1000}s ease-out`;\n                        wordArea.style.opacity = \"1\";\n                        wordArea.style.transform = \"translateY(0px)\";\n                    } else if (currentWpm < NO_ANIMATION_THRESHOLD) {\n                        // 중간 속도: 미묘한 투명도 변화만\n                        wordArea.style.opacity = \"0.5\";\n                        wordArea.offsetHeight; // Reflow\n                        wordArea.style.transition = `opacity ${ANIMATION_DURATION_SUBTLE / 1000}s ease-in-out`;\n                        wordArea.style.opacity = \"1\";\n                    }\n                    // 빠른 속도 (400+ WPM): 애니메이션 없음\n                }\n            },\n            onProgress: (idx, total) => {\n                readerState.currentIndex = idx;\n                if (dom.progressInfoDisplay) {\n                    let unitLabel;\n                    if (readerState.NO_SPACE_LANGUAGES.includes(appState.currentLanguage)) unitLabel = getTranslation(\"charsLabel\");\n                    else if (readerState.chunkSize > 1) unitLabel = getTranslation(\"chunksLabel\");\n                    else unitLabel = getTranslation(\"wordsLabel\");\n                    dom.progressInfoDisplay.textContent = getTranslation(\"progressLabelFormat\", appState.currentLanguage, { unit: unitLabel, current: idx, total });\n                }\n                updateProgressBar();\n            },\n            onStatus: (key) => {\n                if (key === 'msgNoWords') showMessage('msgNoWords', 'error');\n                else if (dom.currentWordDisplay) dom.currentWordDisplay.innerHTML = formatWordWithFixation(getTranslation(key));\n            },\n            onComplete: () => {\n                updateButtonStates(\"completed\");\n                scheduleSave();\n                localStorage.setItem(LS_KEYS.INDEX, \"0\");\n            }\n        });\n    \n\n    readerState.isPaused = false;\n    updateButtonStates(\"reading\");\n    readerState.engine.start(isResuming, START_DELAY);\n}\n\nfunction completeReadingSession() {\n    clearInterval(readerState.intervalId);\n    readerState.intervalId = null;\n\n    if (dom.currentWordDisplay) {\n        dom.currentWordDisplay.innerHTML = formatWordWithFixation(getTranslation(\"statusComplete\"));\n    }\n\n    showMessage(\"msgAllWordsRead\", \"success\", 3000);\n    updateButtonStates(\"completed\");\n    scheduleSave();\n    localStorage.setItem(LS_KEYS.INDEX, \"0\");\n}\n\nexport function pauseReading() {\n    if (readerState.engine) readerState.engine.pause();\n    readerState.isPaused = true;\n    updateButtonStates(\"paused\");\n    scheduleSave();\n    localStorage.setItem(LS_KEYS.INDEX, readerState.currentIndex.toString());\n}\n\nexport function updateReadingSpeed(newWpm) {\n    readerState.currentWpm = newWpm;\n    if (readerState.engine) {\n        readerState.engine.updateSpeed();\n    }\n}","// ui.js - UI logic, DOM manipulation, and event listeners.\n\nimport * as auth from './auth.js';\nimport { appState, readerState, documentState } from \"./state.js\";\nimport { handleSuccessfulLogin, handleLogout } from \"./main.js\";\nimport { scheduleSave } from \"./save_manager.js\";\nimport { pauseReading, startReadingFlow, updateReadingSpeed, updateProgressBar } from \"./reader.js\";\nimport { updateTextStats, handleTextChange } from \"./text_handler.js\";\n\nexport const dom = {\n    mainCard: document.querySelector(\".main-card\"),\n    documentSidebar: document.getElementById(\"document-sidebar\"),\n    sidebarOverlay: document.getElementById(\"sidebar-overlay\"),\n    textInput: document.getElementById(\"text-input\"),\n    currentWordDisplay: document.getElementById(\"current-word\"),\n    progressInfoDisplay: document.getElementById(\"progress-info\"),\n    progressBarFill: document.getElementById(\"progress-bar-fill\"),\n    startButton: document.getElementById(\"start-button\"),\n    pauseButton: document.getElementById(\"pause-button\"),\n    resetButton: document.getElementById(\"reset-button\"),\n    fullscreenButton: document.getElementById(\"fullscreen-button\"),\n    newDocumentButton: document.getElementById(\"new-document-button\"),\n    clearTextButton: document.getElementById(\"clear-text-button\"),\n    loginButton: document.getElementById(\"login-button\"),\n    logoutButton: document.getElementById(\"logout-button\"),\n    hamburgerMenuButton: document.getElementById(\"hamburger-menu-button\"),\n    closeSidebarButton: document.getElementById(\"close-sidebar-button\"),\n    wpmInput: document.getElementById(\"wpm-input\"),\n    darkModeToggle: document.getElementById(\"dark-mode-toggle\"),\n    themeToggleDarkIcon: document.getElementById(\"theme-toggle-dark-icon\"),\n    themeToggleLightIcon: document.getElementById(\"theme-toggle-light-icon\"),\n    themeSelector: document.getElementById(\"theme-selector\"),\n    fixationToggle: document.getElementById(\"fixation-toggle\"),\n    languageSelector: document.getElementById(\"language-selector\"),\n    chunkSizeSelector: document.getElementById(\"chunk-size-selector\"),\n    readingModeSelector: document.getElementById(\"reading-mode-selector\"),\n    fontFamilySelector: document.getElementById(\"font-family-selector\"),\n    fontSizeSlider: document.getElementById(\"font-size-slider\"),\n    fontSizeLabel: document.getElementById(\"font-size-label\"),\n    wordCountDisplay: null,\n    charCountDisplay: null,\n    readingTimeDisplay: null,\n    readabilityScore: document.getElementById(\"readability-score\"),\n    avgSentenceLength: document.getElementById(\"avg-sentence-length\"),\n    syllableCount: document.getElementById(\"syllable-count\"),\n    lexicalDiversity: document.getElementById(\"lexical-diversity\"),\n    documentList: document.getElementById(\"document-list\"),\n    authModal: document.getElementById(\"auth-modal\"),\n    authForm: document.getElementById(\"auth-form\"),\n    emailInput: document.getElementById(\"email-input\"),\n    passwordInput: document.getElementById(\"password-input\"),\n    authSubmitButton: document.getElementById(\"auth-submit-button\"),\n    authCancelButton: document.getElementById(\"auth-cancel-button\"),\n    authSwitchButton: document.getElementById(\"auth-switch-button\"),\n    authModalTitle: document.getElementById(\"auth-modal-title\"),\n};\n\nexport function showConfirmationModal(titleKey, messageKey, onConfirm) {\n    const overlay = document.getElementById('confirmation-modal-overlay');\n    const titleEl = document.getElementById('confirmation-modal-title');\n    const messageEl = document.getElementById('confirmation-modal-message');\n    const confirmBtn = document.getElementById('confirmation-modal-confirm-button');\n    const cancelBtn = document.getElementById('confirmation-modal-cancel-button');\n    if (!overlay || !titleEl || !messageEl || !confirmBtn || !cancelBtn) return;\n\n    titleEl.textContent = getTranslation(titleKey);\n    messageEl.textContent = getTranslation(messageKey);\n    confirmBtn.textContent = getTranslation('confirmButton');\n    cancelBtn.textContent = getTranslation('cancelButton');\n\n    const newConfirmBtn = confirmBtn.cloneNode(true);\n    confirmBtn.parentNode.replaceChild(newConfirmBtn, confirmBtn);\n    const newCancelBtn = cancelBtn.cloneNode(true);\n    cancelBtn.parentNode.replaceChild(newCancelBtn, cancelBtn);\n\n    const close = () => overlay.classList.add('hidden');\n    newConfirmBtn.onclick = () => { onConfirm(); close(); };\n    newCancelBtn.onclick = close;\n    overlay.onclick = (e) => { if (e.target === overlay) close(); };\n    overlay.classList.remove('hidden');\n}\n\nexport function applyReaderStyles(fontFamily, fontSize) {\n    if (dom.currentWordDisplay) {\n        dom.currentWordDisplay.style.fontFamily = fontFamily;\n        dom.currentWordDisplay.style.fontSize = `${fontSize}px`;\n    }\n}\n\nexport function applyTheme(theme, isDark) {\n    // 테마 설정 (전역 데이터 속성)\n    if (theme) {\n        document.body.setAttribute('data-theme', theme);\n        if (dom.themeSelector && dom.themeSelector.value !== theme) {\n            dom.themeSelector.value = theme;\n        }\n    }\n    // 다크모드 설정 (html 클래스)\n    document.documentElement.classList.toggle('dark', !!isDark);\n    // 아이콘 업데이트\n    if (dom.themeToggleDarkIcon) dom.themeToggleDarkIcon.style.display = isDark ? 'inline-flex' : 'none';\n    if (dom.themeToggleLightIcon) dom.themeToggleLightIcon.style.display = isDark ? 'none' : 'inline-flex';\n}\n\nexport function getTranslation(key, lang = appState.currentLanguage, params = null) {\n    const langToUse = translations[lang] || translations[\"en\"];\n    let text = langToUse?.[key] || key;\n    if (params && typeof text === 'string') {\n        for (const pKey in params) {\n            text = text.replaceAll(`{${pKey}}`, params[pKey]);\n        }\n    }\n    return text;\n}\n\nexport function setLanguage(lang, isInitializing = false) {\n    console.log('setLanguage called with:', lang, 'initializing:', isInitializing);\n    \n    appState.currentLanguage = lang;\n    if (dom.languageSelector) dom.languageSelector.value = lang;\n    document.documentElement.lang = lang;\n    \n    // 모든 번역 가능한 요소 업데이트\n    document.querySelectorAll(\"[data-lang-key]\").forEach(el => {\n        const text = getTranslation(el.dataset.langKey, lang);\n        if (text && text !== el.dataset.langKey) {\n            el.innerHTML = text;\n        }\n    });\n    \n    // 버튼 상태 업데이트\n    updateButtonStates(readerState.isPaused ? \"paused\" : \"initial\");\n    \n    // 초기화가 아닐 때만 통계 업데이트 (순환 호출 방지)\n    if (!isInitializing) {\n        // updateTextStats 대신 scheduleSave만 호출\n        scheduleSave();\n    }\n    \n    console.log('Language changed to:', lang);\n}\n\nexport function showMessage(messageKey, type = \"info\", duration = 2000) {\n    const messageBox = document.getElementById(\"custom-message-box\");\n    if (!messageBox) return;\n    messageBox.querySelector('span').textContent = getTranslation(messageKey);\n    messageBox.className = `message-box fixed top-5 left-1/2 -translate-x-1/2 p-4 rounded-md shadow-lg z-[1000] ${type}`;\n    messageBox.classList.add(\"show\");\n    setTimeout(() => messageBox.classList.remove(\"show\"), duration);\n}\n\nexport function updateButtonStates(buttonState) {\n    const hasText = dom.textInput && dom.textInput.value.trim().length > 0;\n    dom.startButton.disabled = true;\n    dom.pauseButton.disabled = true;\n    dom.resetButton.disabled = true;\n\n    switch (buttonState) {\n        case \"initial\":\n            if (hasText) dom.startButton.disabled = false;\n            break;\n        case \"reading\":\n            dom.pauseButton.disabled = false;\n            dom.resetButton.disabled = false;\n            break;\n        case \"paused\":\n            if (hasText) dom.startButton.disabled = false;\n            dom.resetButton.disabled = false;\n            break;\n        case \"completed\":\n            dom.resetButton.disabled = false;\n            break;\n    }\n    dom.startButton.textContent = getTranslation(buttonState === 'paused' ? \"resumeButton\" : \"startButton\");\n    dom.pauseButton.textContent = getTranslation(\"pauseButton\");\n    dom.resetButton.textContent = getTranslation(\"resetButton\");\n}\n\nfunction setupReaderControls() {\n    // 시작 버튼\n    dom.startButton?.addEventListener(\"click\", () => {\n        const isResuming = readerState.isPaused && readerState.currentIndex > 0;\n        startReadingFlow(isResuming);\n    });\n    \n    // 일시정지 버튼\n    dom.pauseButton?.addEventListener(\"click\", () => {\n        pauseReading();\n    });\n    \n    // 리셋 버튼\n    dom.resetButton?.addEventListener(\"click\", () => {\n        if (dom.currentWordDisplay) {\n            dom.currentWordDisplay.innerHTML = '';\n        }\n        readerState.currentIndex = 0;\n        updateProgressBar();\n        updateButtonStates();\n    });\n    \n    dom.wpmInput?.addEventListener(\"input\", () => {\n        const newWpm = parseInt(dom.wpmInput.value, 10);\n        readerState.currentWpm = newWpm;\n        // 통계 및 세분화 즉시 갱신\n        updateTextStats();\n        scheduleSave();\n        updateReadingSpeed(newWpm);\n    });\n    dom.fontFamilySelector?.addEventListener('change', (e) => {\n        appState.fontFamily = e.target.value;\n        applyReaderStyles(appState.fontFamily, appState.fontSize);\n        scheduleSave();\n    });\n    dom.fontSizeSlider?.addEventListener('input', (e) => {\n        const newSize = e.target.value;\n        appState.fontSize = newSize;\n        if(dom.fontSizeLabel) dom.fontSizeLabel.textContent = getTranslation('fontSizeLabel', appState.currentLanguage, { size: newSize });\n        applyReaderStyles(appState.fontFamily, appState.fontSize);\n        scheduleSave();\n    });\n    dom.chunkSizeSelector?.addEventListener('change', async (e) => {\n        readerState.chunkSize = parseInt(e.target.value, 10);\n        if (dom.textInput.value) await handleTextChange(dom.textInput.value);\n        scheduleSave();\n    });\n    dom.fixationToggle?.addEventListener(\"change\", (e) => {\n        // Material Web Component Switch는 selected 속성 사용\n        const isEnabled = e.target.selected !== undefined ? e.target.selected : e.target.checked;\n        readerState.isFixationPointEnabled = isEnabled;\n        console.log('Fixation point toggled:', readerState.isFixationPointEnabled, 'Event target:', e.target);\n        scheduleSave();\n    });\n    dom.readingModeSelector?.addEventListener('change', async (e) => {\n        readerState.readingMode = e.target.value;\n        // 읽기 모드 변경 시 텍스트 다시 처리\n        if (dom.textInput.value) await handleTextChange(dom.textInput.value);\n        scheduleSave();\n    });\n}\n\nfunction setupGeneralEventListeners() {\n    dom.languageSelector?.addEventListener(\"change\", (event) => {\n        const lang = event.target.value;\n        console.log('Language changed to:', lang);\n        setLanguage(lang);\n        // 강제 표시 동기화\n        setTimeout(() => {\n            if (dom.languageSelector.value !== lang) {\n                dom.languageSelector.value = lang;\n                console.log('Language selector value forcibly synced to:', lang);\n            }\n        }, 100);\n    });\n    dom.themeSelector?.addEventListener('change', (e) => {\n        const theme = e.target.value;\n        console.log('Theme changed to:', theme);\n        applyTheme(theme, document.documentElement.classList.contains('dark'));\n        scheduleSave();\n        // 강제 표시 동기화\n        setTimeout(() => {\n            if (dom.themeSelector.value !== theme) {\n                dom.themeSelector.value = theme;\n                console.log('Theme selector value forcibly synced to:', theme);\n            }\n        }, 100);\n    });\n    dom.darkModeToggle?.addEventListener(\"click\", () => {\n        const isDark = !document.documentElement.classList.contains('dark');\n        console.log('Dark mode toggle clicked, isDark:', isDark);\n        document.documentElement.classList.toggle('dark', isDark);\n        applyTheme(dom.themeSelector?.value || 'blue', isDark);\n        dom.darkModeToggle.setAttribute('aria-pressed', isDark.toString());\n        scheduleSave();\n    });\n}\n\nexport function updateAuthUI() {\n    const isLoggedIn = auth.isLoggedIn();\n    if (dom.loginButton) dom.loginButton.classList.toggle('hidden', isLoggedIn);\n    if (dom.logoutButton) dom.logoutButton.classList.toggle('hidden', !isLoggedIn);\n    if (dom.newDocumentButton) dom.newDocumentButton.classList.toggle('hidden', !isLoggedIn);\n}\n\nexport function showAuthModal(isSignup = false) {\n    if (dom.authModal) {\n        dom.authModal.classList.remove('hidden');\n        if (dom.authModalTitle) {\n            dom.authModalTitle.textContent = getTranslation(isSignup ? 'signupTitle' : 'loginTitle');\n        }\n        if (dom.authSubmitButton) {\n            dom.authSubmitButton.textContent = getTranslation(isSignup ? 'signupButton' : 'loginButton');\n        }\n        if (dom.authSwitchButton) {\n            dom.authSwitchButton.textContent = getTranslation(isSignup ? 'switchToLogin' : 'switchToSignup');\n        }\n    }\n}\n\nexport function hideAuthModal() {\n    if (dom.authModal) {\n        dom.authModal.classList.add('hidden');\n        if (dom.authForm) {\n            dom.authForm.reset();\n        }\n    }\n}\n\nfunction setupAuthEventListeners() {\n    if (dom.loginButton) {\n        dom.loginButton.addEventListener('click', () => showAuthModal(false));\n    }\n    \n    if (dom.logoutButton) {\n        dom.logoutButton.addEventListener('click', () => {\n            handleLogout();\n        });\n    }\n    \n    if (dom.authCancelButton) {\n        dom.authCancelButton.addEventListener('click', hideAuthModal);\n    }\n    \n    if (dom.authSwitchButton) {\n        dom.authSwitchButton.addEventListener('click', (e) => {\n            e.preventDefault();\n            const isCurrentlySignup = dom.authModalTitle?.textContent === getTranslation('signupTitle');\n            showAuthModal(!isCurrentlySignup);\n        });\n    }\n    \n    if (dom.authForm) {\n        dom.authForm.addEventListener('submit', async (e) => {\n            e.preventDefault();\n            const email = dom.emailInput?.value || dom.emailInput?.input?.value;\n            const password = dom.passwordInput?.value || dom.passwordInput?.input?.value;\n            const captchaToken = grecaptcha?.getResponse();\n            \n            if (!email || !password) {\n                showMessage('msgEmailPasswordRequired', 'error');\n                return;\n            }\n            \n            // 비밀번호 정책 검사 (회원가입 시에만)\n            const isSignup = dom.authModalTitle?.textContent === getTranslation('signupTitle');\n            if (isSignup) {\n                const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*(),.?\":{}|<>])[A-Za-z\\d!@#$%^&*(),.?\":{}|<>]{8,}$/;\n                if (!passwordRegex.test(password)) {\n                    showMessage('error_WEAK_PASSWORD', 'error');\n                    return;\n                }\n            }\n            \n            if (!captchaToken) {\n                showMessage('msgCaptchaRequired', 'error');\n                return;\n            }\n            \n            try {\n                let response;\n                if (isSignup) {\n                    response = await auth.signup(email, password, captchaToken);\n                } else {\n                    response = await auth.login(email, password, captchaToken);\n                }\n                \n                if (response.token) {\n                    hideAuthModal();\n                    await handleSuccessfulLogin();\n                    showMessage(isSignup ? 'msgSignupSuccess' : 'msgLoginSuccess', 'success');\n                } else {\n                    showMessage(response.error_code || 'msgAuthError', 'error');\n                }\n            } catch (error) {\n                console.error('Auth error:', error);\n                showMessage('msgAuthError', 'error');\n            }\n        });\n    }\n}\n\nfunction setupSidebarEventListeners() {\n    if (dom.hamburgerMenuButton) {\n        dom.hamburgerMenuButton.addEventListener('click', () => {\n            if (dom.documentSidebar) {\n                dom.documentSidebar.classList.remove('-translate-x-full');\n                dom.hamburgerMenuButton.setAttribute('aria-expanded', 'true');\n            }\n            if (dom.sidebarOverlay) {\n                dom.sidebarOverlay.classList.remove('hidden');\n            }\n        });\n    }\n    \n    if (dom.closeSidebarButton) {\n        dom.closeSidebarButton.addEventListener('click', () => {\n            if (dom.documentSidebar) {\n                dom.documentSidebar.classList.add('-translate-x-full');\n                dom.hamburgerMenuButton.setAttribute('aria-expanded', 'false');\n            }\n            if (dom.sidebarOverlay) {\n                dom.sidebarOverlay.classList.add('hidden');\n            }\n        });\n    }\n    \n    if (dom.sidebarOverlay) {\n        dom.sidebarOverlay.addEventListener('click', () => {\n            if (dom.documentSidebar) {\n                dom.documentSidebar.classList.add('-translate-x-full');\n                dom.hamburgerMenuButton.setAttribute('aria-expanded', 'false');\n            }\n            dom.sidebarOverlay.classList.add('hidden');\n        });\n    }\n}\n\nfunction setupDocumentEventListeners() {\n    if (dom.newDocumentButton) {\n        dom.newDocumentButton.addEventListener('click', () => {\n            if (dom.textInput) {\n                dom.textInput.value = '';\n                if (documentState.simplemde) {\n                    documentState.simplemde.value('');\n                }\n                updateTextStats();\n                scheduleSave();\n            }\n        });\n    }\n    \n    if (dom.clearTextButton) {\n        dom.clearTextButton.addEventListener('click', () => {\n            if (dom.textInput) {\n                dom.textInput.value = '';\n                if (documentState.simplemde) {\n                    documentState.simplemde.value('');\n                }\n                updateTextStats();\n                scheduleSave();\n            }\n        });\n    }\n}\n\nfunction initializeDOMElements() {\n    // 통계 요소들을 동적으로 할당\n    dom.wordCountDisplay = document.querySelector(\"[data-stat='word-count']\");\n    dom.charCountDisplay = document.querySelector(\"[data-stat='char-count']\");\n    dom.readingTimeDisplay = document.querySelector(\"[data-stat='reading-time']\");\n\n    // 셀렉트 기본값을 상태로 보정\n    if (dom.languageSelector && appState.currentLanguage) {\n        dom.languageSelector.value = appState.currentLanguage;\n    }\n    if (dom.themeSelector && document.body.getAttribute('data-theme')) {\n        dom.themeSelector.value = document.body.getAttribute('data-theme');\n    }\n    \n    console.log('DOM elements initialized:', {\n        wordCount: !!dom.wordCountDisplay,\n        charCount: !!dom.charCountDisplay,\n        readingTime: !!dom.readingTimeDisplay,\n        darkModeToggle: !!dom.darkModeToggle,\n        themeSelector: !!dom.themeSelector,\n        languageSelector: !!dom.languageSelector\n    });\n}\n\nexport function attachEventListeners() {\n    initializeDOMElements();\n    setupReaderControls();\n    setupGeneralEventListeners();\n    setupAuthEventListeners();\n    setupSidebarEventListeners();\n    setupDocumentEventListeners();\n}\n","import * as auth from './auth.js';\nimport { dom, showMessage, getTranslation, showConfirmationModal } from './ui.js';\nimport { documentState, LS_KEYS } from './state.js';\nimport { handleTextChange } from './text_handler.js';\nimport { debounce } from './utils.js';\n\nlet saveTimeout;\n\n/**\n * Loads a document into the editor.\n * @param {object} doc The document object to load.\n */\nexport function loadDocument(doc) {\n    documentState.activeDocument = doc;\n    localStorage.setItem(LS_KEYS.LAST_DOC_ID, doc.id);\n    if (documentState.simplemde) {\n        documentState.simplemde.value(doc.content);\n    }\n    // Also update the hidden textarea for other parts of the app\n    if (dom.textInput) {\n        dom.textInput.value = doc.content;\n    }\n    // Highlight the active document in the list\n    document.querySelectorAll('#document-list > div').forEach(el => {\n        el.classList.toggle('bg-sky-100', el.dataset.id === String(doc.id));\n        el.classList.toggle('dark:bg-sky-900', el.dataset.id === String(doc.id));\n    });\n}\n\n/**\n * Handles saving the currently active document.\n */\nfunction scheduleDocumentSave() {\n    clearTimeout(saveTimeout);\n    saveTimeout = setTimeout(async () => {\n        if (documentState.activeDocument && documentState.simplemde) {\n            const newContent = documentState.simplemde.value();\n            // Only save if content has changed\n            if (newContent !== documentState.activeDocument.content) {\n                try {\n                    await auth.updateDocument(documentState.activeDocument.id, documentState.activeDocument.title, newContent);\n                    documentState.activeDocument.content = newContent; // Update local state\n                } catch (error) {\n                    showMessage('msgSettingsSaveError', 'error'); // Re-use settings save error message\n                }\n            }\n        }\n    }, 1500);\n}\n\n/**\n * Fetches documents and renders them in the sidebar.\n */\nexport async function renderDocumentList() {\n    if (!auth.isLoggedIn()) {\n        dom.documentList.innerHTML = `<p class=\"text-sm text-slate-500 p-4 text-center\" data-lang-key=\"loginToSeeDocs\"></p>`;\n        const el = dom.documentList.querySelector('[data-lang-key=\"loginToSeeDocs\"]');\n        if (el) el.textContent = getTranslation(\"loginToSeeDocs\");\n        return;\n    }\n\n    try {\n        const documents = await auth.getDocuments();\n        const docListContainer = dom.documentList;\n        docListContainer.innerHTML = '';\n\n        if (documents.length === 0) {\n            docListContainer.innerHTML = `<p class=\"text-sm text-slate-500 p-4 text-center\" data-lang-key=\"noDocuments\"></p>`;\n            const el = docListContainer.querySelector('[data-lang-key=\"noDocuments\"]');\n            if (el) el.textContent = getTranslation(\"noDocuments\");\n            return;\n        }\n\n        documents.forEach(doc => {\n            const docElement = document.createElement('div');\n            docElement.className = 'document-item p-3 border-b border-slate-200 dark:border-slate-700 cursor-pointer hover:bg-slate-100 dark:hover:bg-slate-600 flex justify-between items-center';\n            docElement.dataset.id = doc.id;\n\n            const textContainer = document.createElement('div');\n            const title = document.createElement('h3');\n            title.className = 'font-semibold text-sm text-slate-800 dark:text-slate-200';\n            title.textContent = doc.title;\n            const date = document.createElement('p');\n            date.className = 'text-xs text-slate-500 dark:text-slate-400';\n            date.textContent = `Updated: ${new Date(doc.updated_at).toLocaleDateString()}`;\n            const deleteBtn = document.createElement('button');\n            deleteBtn.className = 'delete-doc-btn p-1 text-slate-400 hover:text-rose-500 dark:hover:text-rose-400 rounded-full';\n            deleteBtn.innerHTML = `<svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path></svg>`;\n            deleteBtn.dataset.id = doc.id;\n            deleteBtn.title = \"Delete document\";\n\n            textContainer.appendChild(title);\n            textContainer.appendChild(date);\n            docElement.appendChild(textContainer);\n            docElement.appendChild(deleteBtn);\n            docListContainer.appendChild(docElement);\n        });\n\n    } catch (error) {\n        console.error(\"Failed to render document list:\", error);\n        dom.documentList.innerHTML = `<p class=\"text-sm text-red-500 p-4 text-center\" data-lang-key=\"errorLoadDocs\"></p>`;\n        const el = dom.documentList.querySelector('[data-lang-key=\"errorLoadDocs\"]');\n        if (el) el.textContent = getTranslation(\"errorLoadDocs\");\n    }\n}\n\nexport function attachDocumentEventListeners() {\n    dom.documentList.addEventListener('click', async (e) => {\n        const docElement = e.target.closest('.document-item');\n        const deleteButton = e.target.closest('.delete-doc-btn');\n\n        if (deleteButton) {\n            e.stopPropagation();\n            const docId = deleteButton.dataset.id;\n            showConfirmationModal('confirmDeleteDocTitle', 'confirmDeleteDocMessage', async () => {\n                try {\n                    await auth.deleteDocument(docId);\n                    showMessage('msgDocDeleted', 'success');\n                    if (documentState.activeDocument && documentState.activeDocument.id == docId) {\n                        documentState.activeDocument = null;\n                        if (documentState.simplemde) {\n                            documentState.simplemde.value('');\n                        }\n                    }\n                    await renderDocumentList();\n                } catch (error) {\n                    showMessage('msgDocDeleteError', 'error');\n                }\n            });\n        } else if (docElement) {\n            const docId = docElement.dataset.id;\n            try {\n                const document = await auth.getDocument(docId);\n                loadDocument(document);\n            } catch (error) {\n                showMessage('msgDocLoadError', 'error');\n            }\n        }\n    });\n\n    dom.newDocumentButton.addEventListener('click', async () => {\n        const title = prompt(\"Enter a title for your new document:\", \"New Document\");\n        if (title) {\n            try {\n                const newDoc = await auth.createDocument(title, `# ${title}\\n\\n`);\n                showMessage('msgDocCreated', 'success');\n                await renderDocumentList();\n                loadDocument(newDoc);\n            } catch (error) {\n                showMessage(error.message, 'error');\n            }\n        }\n    });\n\n    if (documentState.simplemde) {\n        documentState.simplemde.codemirror.on(\"change\", debounce(() => {\n            if (documentState.activeDocument) {\n                scheduleDocumentSave();\n            }\n            if (dom.textInput) {\n                dom.textInput.value = documentState.simplemde.value();\n            }\n        }, 500));\n    }\n\n    if(dom.startButton) {\n        dom.startButton.addEventListener('click', () => {\n            if(documentState.simplemde && dom.textInput.value !== documentState.simplemde.value()) {\n                 handleTextChange(documentState.simplemde.value());\n            }\n        }, true);\n    }\n}\n","/**\n * Creates a debounced function that delays invoking func until after wait milliseconds have elapsed\n * since the last time the debounced function was invoked.\n * @param {Function} func The function to debounce.\n * @param {number} wait The number of milliseconds to delay.\n * @returns {Function} Returns the new debounced function.\n */\nexport function debounce(func, wait) {\n    let timeout;\n    return function executedFunction(...args) {\n        const later = () => {\n            clearTimeout(timeout);\n            func(...args);\n        };\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n    };\n}\n","// main.js - The entry point of the application.\nimport * as auth from './auth.js';\nimport { appState, readerState, documentState, LS_KEYS } from './state.js';\nimport { dom, applyTheme, setLanguage, attachEventListeners, updateButtonStates, applyReaderStyles, updateAuthUI, showAuthModal, hideAuthModal } from './ui.js';\nimport { updateTextStats } from './text_handler.js';\nimport { updateProgressBar } from './reader.js';\nimport { renderDocumentList, attachDocumentEventListeners, loadDocument } from './document_manager.js';\nimport { scheduleSave, getCurrentSettings } from './save_manager.js';\n\n\nfunction applySettings(settings) {\n    const lang = settings.language || navigator.language.split(\"-\")[0] || \"ko\";\n    appState.currentLanguage = translations[lang] ? lang : \"ko\";\n\n    const isDark = settings.darkMode ?? window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n    const theme = settings.colorTheme || 'blue';\n    applyTheme(theme, isDark);\n    if(dom.themeSelector) dom.themeSelector.value = theme;\n\n    readerState.isFixationPointEnabled = settings.isFixationPointEnabled || false;\n    if (dom.fixationToggle) {\n        // Material Web Component Switch는 selected 속성 사용\n        dom.fixationToggle.selected = readerState.isFixationPointEnabled;\n        dom.fixationToggle.checked = readerState.isFixationPointEnabled; // 호환성을 위해 둘 다 설정\n    }\n\n    readerState.currentWpm = parseInt(settings.wpm || \"250\", 10);\n    if (dom.wpmInput) dom.wpmInput.value = readerState.currentWpm;\n\n    readerState.chunkSize = parseInt(settings.chunkSize || \"1\", 10);\n    if (dom.chunkSizeSelector) dom.chunkSizeSelector.value = readerState.chunkSize;\n\n    readerState.readingMode = settings.readingMode || 'flash';\n    if (dom.readingModeSelector) dom.readingModeSelector.value = readerState.readingMode;\n\n    appState.fontFamily = settings.fontFamily || \"'Roboto', sans-serif\";\n    appState.fontSize = settings.fontSize || 48;\n    if (dom.fontFamilySelector) dom.fontFamilySelector.value = appState.fontFamily;\n    if (dom.fontSizeSlider) dom.fontSizeSlider.value = appState.fontSize;\n    if (dom.fontSizeLabel) dom.fontSizeLabel.textContent = getTranslation('fontSizeLabel', appState.currentLanguage, { size: appState.fontSize });\n    applyReaderStyles(appState.fontFamily, appState.fontSize);\n\n    if (settings.text && documentState.simplemde) {\n        documentState.simplemde.value(settings.text);\n    }\n}\n\nlet saveTimeout;\n\nexport async function handleSuccessfulLogin() {\n    updateAuthUI();\n    await renderDocumentList();\n    await loadAndApplySettings();\n    setLanguage(appState.currentLanguage, true);\n    updateTextStats();\n}\n\nexport function handleLogout() {\n    auth.logout();\n    documentState.activeDocument = null;\n    if (documentState.simplemde) documentState.simplemde.value('');\n    updateAuthUI();\n    renderDocumentList();\n}\n\nasync function loadAndApplySettings() {\n    let settings = {};\n    \n    // 먼저 로컬 설정을 로드\n    const localSettings = localStorage.getItem(LS_KEYS.SETTINGS);\n    if (localSettings) {\n        try {\n            settings = JSON.parse(localSettings);\n        } catch (error) {\n            console.warn('Failed to parse local settings:', error);\n        }\n    }\n\n    // 로그인된 경우 서버 설정을 로드하고 로컬 설정을 덮어쓰기\n    if (auth.isLoggedIn()) {\n        try {\n            const serverSettings = await auth.getSettings();\n            settings = { ...settings, ...serverSettings };\n            console.log('Settings loaded from server:', serverSettings);\n        } catch (error) {\n            console.error('Could not load settings from the server:', error);\n        }\n    }\n    \n    applySettings(settings);\n}\n\n\nasync function initializeApp() {\n    try {\n        if (document.getElementById(\"text-input\")) {\n            documentState.simplemde = new SimpleMDE({\n                element: document.getElementById(\"text-input\"),\n                spellChecker: false,\n                autosave: { enabled: false },\n                toolbar: [\"bold\", \"italic\", \"heading\", \"|\", \"quote\", \"unordered-list\", \"ordered-list\", \"|\", \"link\", \"image\", \"|\", \"preview\", \"side-by-side\", \"fullscreen\"],\n            });\n            \n            // SimpleMDE 이벤트 리스너 추가\n            documentState.simplemde.codemirror.on('change', () => {\n                console.log('SimpleMDE content changed');\n                updateTextStats();\n                scheduleSave();\n            });\n            \n            // 추가 이벤트 리스너들\n            documentState.simplemde.codemirror.on('inputRead', () => {\n                console.log('SimpleMDE input read');\n                updateTextStats();\n            });\n            \n            documentState.simplemde.codemirror.on('paste', () => {\n                console.log('SimpleMDE paste detected');\n                setTimeout(() => {\n                    updateTextStats();\n                    scheduleSave();\n                }, 100);\n            });\n        }\n\n        await loadAndApplySettings();\n        updateAuthUI();\n        await renderDocumentList();\n        setLanguage(appState.currentLanguage, true);\n        updateTextStats();\n        updateButtonStates(\"initial\");\n        updateProgressBar();\n\n        if (!localStorage.getItem(LS_KEYS.HAS_VISITED)) {\n            const welcomeDialog = document.getElementById('welcome-dialog');\n            if(welcomeDialog) welcomeDialog.show();\n            localStorage.setItem(LS_KEYS.HAS_VISITED, 'true');\n        }\n\n    } catch (error) {\n        console.error(\"Error during app initialization:\", error);\n    } finally {\n        attachEventListeners();\n        attachDocumentEventListeners();\n    }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", initializeApp);\n"],"names":["API_URL","TOKEN_KEY","logout","localStorage","removeItem","getToken","getItem","isLoggedIn","token","payload","JSON","parse","atob","split","now","Math","floor","Date","exp","e","async","saveSettings","settings","Promise","resolve","response","fetch","method","headers","Authorization","body","stringify","ok","status","Error","data","json","setItem","refreshToken","newToken","retryResponse","refreshError","LS_KEYS","appState","currentLanguage","currentTheme","userHasManuallySetTheme","originalPlaceholderText","encoder","TextEncoder","fontFamily","fontSize","readerState","words","currentIndex","currentWpm","isPaused","isFixationPointEnabled","chunkSize","readingMode","NO_SPACE_LANGUAGES","engine","documentState","simplemde","activeDocument","saveTimeout","scheduleSave","clearTimeout","setTimeout","theme","language","wpm","error","auth.isLoggedIn","auth.saveSettings","kuromojiTokenizer","getTokenizer","reject","kuromoji","builder","dicPath","build","err","tokenizer","updateTextStats","cleanedText","raw","text","String","replace","trim","cleanText","value","dom","textInput","wordCountDisplay","textContent","charCountDisplay","readingTimeDisplay","progressInfoDisplay","updateProgressBar","tokenize","map","t","surface_form","segmentJapaneseWithKuromoji","segments","segment","test","length","koreanWords","currentWord","i","push","filter","word","segmentKoreanText","includes","segmenter","Intl","Segmenter","granularity","Array","from","s","segmentTextWithBrowserAPI","Boolean","wordCount","noSpaceLanguage","isArray","chunks","slice","join","chunkIfNeeded","readingTime","ceil","stats","readabilityScore","avgSentenceLength","syllableCount","lexicalDiversity","sentences","match","w","toLowerCase","vowels","uniqueWords","Set","size","sentenceCount","toFixed","max","updateDetailedStats","handleTextChange","newTextSourceOrEvent","newText","updateButtonStates","currentWordDisplay","innerHTML","formatWordWithFixation","getTranslation","SpeedReaderCore","constructor","options","this","getWords","onChunk","onProgress","onStatus","onComplete","getWpm","getMode","index","timer","startDelayId","intervalMs","min","Number","getAdaptiveInterval","baseInterval","wordText","multiplier","round","resetToStart","start","isResuming","delayMs","clearInterval","tick","scheduleNextTick","total","complete","chunk","chunkText","nextInterval","pause","updateSpeed","progressBarFill","progress","style","width","progressBar","parentElement","setAttribute","toString","point","substring","charAt","mainCard","document","querySelector","documentSidebar","getElementById","sidebarOverlay","startButton","pauseButton","resetButton","fullscreenButton","newDocumentButton","clearTextButton","loginButton","logoutButton","hamburgerMenuButton","closeSidebarButton","wpmInput","darkModeToggle","themeToggleDarkIcon","themeToggleLightIcon","themeSelector","fixationToggle","languageSelector","chunkSizeSelector","readingModeSelector","fontFamilySelector","fontSizeSlider","fontSizeLabel","documentList","authModal","authForm","emailInput","passwordInput","authSubmitButton","authCancelButton","authSwitchButton","authModalTitle","applyReaderStyles","applyTheme","isDark","documentElement","classList","toggle","display","key","lang","params","langToUse","translations","pKey","replaceAll","setLanguage","isInitializing","querySelectorAll","forEach","el","dataset","langKey","showMessage","messageKey","type","duration","messageBox","className","add","remove","buttonState","hasText","disabled","setupReaderControls","addEventListener","textAlign","overflowY","maxHeight","area","scrollTop","scrollHeight","wordArea","ANIMATION_DURATION_NORMAL","ANIMATION_DURATION_SUBTLE","LOW_WPM_THRESHOLD","NO_ANIMATION_THRESHOLD","transition","opacity","transform","offsetHeight","idx","unitLabel","unit","current","startReadingFlow","newWpm","parseInt","updateReadingSpeed","target","newSize","isEnabled","undefined","selected","checked","updateAuthUI","showAuthModal","isSignup","hideAuthModal","reset","setupAuthEventListeners","handleLogout","preventDefault","email","input","password","captchaToken","grecaptcha","getResponse","auth.signup","auth.login","handleSuccessfulLogin","error_code","attachEventListeners","getAttribute","event","contains","loadDocument","doc","id","content","scheduleDocumentSave","newContent","title","auth.updateDocument","renderDocumentList","documents","auth.getDocuments","docListContainer","docElement","createElement","textContainer","date","updated_at","toLocaleDateString","deleteBtn","appendChild","attachDocumentEventListeners","closest","deleteButton","stopPropagation","docId","titleKey","onConfirm","overlay","titleEl","messageEl","confirmBtn","cancelBtn","newConfirmBtn","cloneNode","parentNode","replaceChild","newCancelBtn","close","onclick","showConfirmationModal","auth.deleteDocument","auth.getDocument","prompt","newDoc","message","auth.createDocument","codemirror","on","func","wait","timeout","args","debounce","loadAndApplySettings","auth.logout","localSettings","serverSettings","auth.getSettings","navigator","darkMode","window","matchMedia","matches","colorTheme","applySettings","SimpleMDE","element","spellChecker","autosave","enabled","toolbar","welcomeDialog","show"],"mappings":"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"}